read_lba:
        ; ---------------------------------
        ; スタックフレームの構築
        ; ---------------------------------
                                            ; +4|パラメータバッファ
                                            ; +2|IP(戻り番地)
        push    bp                          ; BP+0|BP(元の値)
        mov     bp, sp         

        ;-----------------------------------------
        ; 【レジスタの保存】
        ;-----------------------------------------
        push    si

        mov     si, [bp + 4]                    ; SI = ドライブ情報

        ;-----------------------------------------
        ; LBA -> CHS変換
        ;-----------------------------------------
        mov     ax, [bp + 6]                    ; AX = LBA
        cdecl   lba_chs, si, .chs, ax           ; lba_chs(drive, .chs. AX);

        ;-----------------------------------------
        ; ドライブ番号のコピー
        ;-----------------------------------------
        mov al, [si + drive.no]
        mov [.chs + drive.no], al

        ;-----------------------------------------
        ; セクタの読み込み
        ;-----------------------------------------
        cdecl read_chs, .chs, word[bp + 8], word[bp + 10]

        ;-----------------------------------------
        ; 【レジスタの復帰】
        ;-----------------------------------------
        pop si

        ;-----------------------------------------
        ; 【スタックフレームの破棄】
        ;-----------------------------------------
        mov sp, bp
        pop bp

        ret

ALIGN 2
.chs:   times drive_size     db   0
