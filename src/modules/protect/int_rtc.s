;************************************************************************
;	RTCの割り込み許可設定
;========================================================================
;■書式		: void rtc_int_en(bit);
;
;■引数
;	bit		: 割り込みを許可するビット
;
;■戻り値	: 無し
;************************************************************************
rtc_int_en:
		;---------------------------------------
		; 【スタックフレームの構築】
		;---------------------------------------
												; ------|--------
												;    + 8| ビット
												; ------|--------
												;    + 4| EIP（戻り番地）
		push	ebp								; EBP+ 0| EBP（元の値）
		mov		ebp, esp						; ------+--------

		;---------------------------------------
		; 【レジスタの保存】
		;---------------------------------------
		push	eax

		;---------------------------------------
		; 割り込み許可設定
		;---------------------------------------
		outp	0x70, 0x0B						; outp(0x70, AL);   // レジスタBを選択

		in		al, 0x71						; AL  = port(0x71); // レジスタBの
		or		al, [ebp + 8]					; AL |= ビット;     // 指定されたビットをセット

		out		0x71, al						; outp(0x71, AL);   // レジスタBに書き込み

		;---------------------------------------
		; 【レジスタの復帰】
		;---------------------------------------
		pop		eax

		;---------------------------------------
		; 【スタックフレームの破棄】
		;---------------------------------------
		mov		esp, ebp
		pop		ebp

		ret


;************************************************************************
;	割り込み処理：RTC
;************************************************************************
int_rtc:
		;---------------------------------------
		; 【レジスタの保存】
		;---------------------------------------
		pusha
		push	ds
		push	es

		;---------------------------------------
		; データ用セグメントセレクタの設定
		;---------------------------------------
		mov		ax, 0x0010						; 
		mov		ds, ax							; 
		mov		es, ax							; 

		;---------------------------------------
		; RTCから時刻を取得
		;---------------------------------------
		cdecl	rtc_get_time, RTC_TIME			; EAX = get_time(&RTC_TIME);
												; 
		;---------------------------------------
		; RTCの割り込み要因を取得
		;---------------------------------------
		outp	0x70, 0x0C						; outp(0x70, 0x0C); // レジスタCを選択
		in		al, 0x71						; AL = inp();

		;---------------------------------------
		; 割り込みフラグをクリア(EOI)
		;---------------------------------------
		outp	0xA0, 0x20						; outp(0xA0, EOI); // スレーブPIC
		outp	0x20, 0x20						; outp(0x20, EOI); // マスタPIC

		;---------------------------------------
		; 【レジスタの復帰】
		;---------------------------------------
		pop		es								; 
		pop		ds								; 
		popa									; 

		iret									; 割り込み処理の終了

