    BOOT_LOAD   equ 0x7C00          ; ブートプログラムのロード位置

    ORG     BOOT_LOAD               ; ロードアドレスをアセンブラに指示

; *******************************
; マクロ
; *******************************
%include    "../include/macro.s"

; *******************************
; エントリポイント
; *******************************
entry:
; -------------------------------
; BPB(BIOS Parameter Block)
; -------------------------------
    jmp     ipl                     ;  iplへジャンプ
    times   90 - ($ - $$) db 0x90   ; 92バイトを0x90で埋める
; -------------------------------
; IPL(inital Program Loder)
; -------------------------------
ipl:
    cli                         ; 割り込み禁止

    mov     ax, 0x0000          ; AX = 0x0000
    mov     ds, ax              ; セグメントレジスタにaxレジスタの値を代入
    mov     es, ax
    mov     ss, ax
    mov     sp, BOOT_LOAD       ; SP = 0x7c00

    sti                         ; 割り込み許可

    mov     [BOOT.DRIVE], dl    ; ブートドライブを保存

    ; -------------------------------
    ; 文字の表示
    ; -------------------------------
    cdecl   puts, .s0 

    ; -------------------------------
    ; 次の512バイトを読み込む
    ; -------------------------------   
    mov     ah, 0x02                    ; AH = 読み込み命令
    mov     al, 1                       ; AL = 読み込みセクタ数
    mov     cx, 0x0002                  ; CX = シリンダ・セクタ
    mov     dh, 0x00                    ; DH = ヘッド位置
    mov     dl, [BOOT.DRIVE]            ; DL = ドライブ番号
    mov     bx, 0x7C00 + 512            ; BX = オフセット
    int     0x13                        ; BIOSコール, p094
.10Q:   jnc     .10E                    ; jnc キャリーフラグが0かどうか
.10T:   cdecl   puts, .e0
        call    reboot                      ; 再起動
.10E:
    ; -------------------------------
    ; 次のステージへ移行
    ; ------------------------------- 
    jmp     stage_2  

    ; -------------------------------
    ; データ
    ; ------------------------------- 
.s0 db  "Booting NamiOS ...", 0x0A, 0x0D, 0
.e0 db  "Error: sector read", 0
.s1 db  "--------", 0x0A, 0x0D, 0

ALIGN 2, db 0
BOOT:                           ; ブートドライブに関する情報
.DRIVE:     dw 0            ; ドライブ番号

%include    "../modules/real/puts.s"
%include    "../modules/real/reboot.s"

; *******************************
; ブートフラグ(先頭512バイトの終了)
; *******************************
    times   510 - ($ - $$) db 0x00 ; 512バイトを0で埋める // ブートプログラムやOSが参照する情報が書き込まれていることがある
    db      0x55, 0xAA ; ブートフラグの条件 p393



; *******************************
; マクロ
; *******************************
stage_2:
    ; -------------------------------
    ; 文字の表示
    ; -------------------------------
    cdecl   puts, .s0 

    ; -------------------------------
    ; 処理の終了
    ; -------------------------------    
    jmp     $                   ;  while(1); // 無限ループ

    ; -------------------------------
    ; データ
    ; -------------------------------    
 .s0 db  " 2nd stage ...", 0x0A, 0x0D, 0

; *******************************
; バディング
; *******************************
    times   (1024*8) - ($ - $$) db 0   ; 8kバイトを0で埋める
